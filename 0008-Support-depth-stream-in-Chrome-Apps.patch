From 203a1732473d0c31a1204b2b32793ce80f1c9fe6 Mon Sep 17 00:00:00 2001
From: Qian Sun <qian.z.sun@intel.com>
Date: Wed, 9 Apr 2014 21:45:52 +0800
Subject: [PATCH 08/10] Support depth stream in Chrome Apps.

---
 .../media/media_capture_devices_dispatcher.cc      |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/chrome/browser/media/media_capture_devices_dispatcher.cc b/chrome/browser/media/media_capture_devices_dispatcher.cc
index 05d32ec..6f14248 100644
--- a/chrome/browser/media/media_capture_devices_dispatcher.cc
+++ b/chrome/browser/media/media_capture_devices_dispatcher.cc
@@ -30,6 +30,7 @@
 #include "chrome/common/chrome_version_info.h"
 #include "chrome/common/pref_names.h"
 #include "components/pref_registry/pref_registry_syncable.h"
+#include "content/common/media/media_stream_options.h"
 #include "content/public/browser/browser_thread.h"
 #include "content/public/browser/desktop_media_id.h"
 #include "content/public/browser/media_capture_devices.h"
@@ -596,7 +597,17 @@ void MediaCaptureDevicesDispatcher::
   if (request.video_type == content::MEDIA_DEVICE_VIDEO_CAPTURE &&
       extension->permissions_data()->HasAPIPermission(
           extensions::APIPermission::kVideoCapture)) {
-    GetDefaultDevicesForProfile(profile, false, true, &devices);
+    if (request.requested_video_device_id == content::kMediaStreamDepth ||
+        request.requested_video_device_id == content::kMediaStreamDepthRgbd) {
+      const content::MediaStreamDevice* device =
+        GetRequestedVideoDevice(request.requested_video_device_id);
+      if (!device)
+        device = GetFirstAvailableVideoDevice();
+      if (device)
+        devices.push_back(*device);
+    } else {
+      GetDefaultDevicesForProfile(profile, false, true, &devices);
+    }
   }
 
   scoped_ptr<content::MediaStreamUI> ui;
-- 
1.7.9.5

