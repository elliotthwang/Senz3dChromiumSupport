From df64243415f2ad9e562251512b2f43731b388e96 Mon Sep 17 00:00:00 2001
From: Qian Sun <qian.z.sun@intel.com>
Date: Wed, 23 Apr 2014 14:43:53 +0800
Subject: [PATCH 09/10] [Windows] Fixup for rebasing 35.0.1898.0

---
 .../capture/win/video_capture_device_nui_win.cc    |   14 ++++++++------
 .../capture/win/video_capture_device_pxc_win.cc    |   12 ++++++------
 2 files changed, 14 insertions(+), 12 deletions(-)

diff --git a/media/video/capture/win/video_capture_device_nui_win.cc b/media/video/capture/win/video_capture_device_nui_win.cc
index 591260e..2d0b997 100644
--- a/media/video/capture/win/video_capture_device_nui_win.cc
+++ b/media/video/capture/win/video_capture_device_nui_win.cc
@@ -379,8 +379,8 @@ class NuiCaptureHelper {
     HRESULT  hresult;
     NUI_IMAGE_FRAME nui_color_image_frame;
     NUI_IMAGE_FRAME nui_depth_image_frame;
-    INuiFrameTexture *nui_color_frame_texture;
-    INuiFrameTexture *nui_depth_frame_texture;
+    INuiFrameTexture *nui_color_frame_texture = NULL;
+    INuiFrameTexture *nui_depth_frame_texture = NULL;
 
     NUI_LOCKED_RECT nui_color_lock_rect;
     NUI_LOCKED_RECT nui_depth_lock_rect;
@@ -440,13 +440,15 @@ class NuiCaptureHelper {
     }
 
     if (nui_color_stream_handle_ != INVALID_HANDLE_VALUE) {
-      nui_color_frame_texture->UnlockRect(0);
+      if (nui_color_frame_texture)
+        nui_color_frame_texture->UnlockRect(0);
       nui_sensor_->NuiImageStreamReleaseFrame(
           nui_color_stream_handle_, &nui_color_image_frame);
     }
 
     if (nui_depth_stream_handle_ != INVALID_HANDLE_VALUE) {
-      nui_depth_frame_texture->UnlockRect(0);
+      if (nui_depth_frame_texture)
+        nui_depth_frame_texture->UnlockRect(0);
       nui_sensor_->NuiImageStreamReleaseFrame(
           nui_depth_stream_handle_, &nui_depth_image_frame);
     }
@@ -621,8 +623,8 @@ void VideoCaptureDeviceNuiWin::StopAndDeAllocate() {
 
 void VideoCaptureDeviceNuiWin::OnIncomingCapturedFrame(
     const uint8* bits, int length) {
-  client_->OnIncomingCapturedFrame(
-      bits, length, base::TimeTicks::Now(), 0, capture_format_);
+  client_->OnIncomingCapturedData(
+      bits, length, capture_format_, 0, base::TimeTicks::Now());
 }
 
 void VideoCaptureDeviceNuiWin::OnSetErrorState(const std::string& reason) {
diff --git a/media/video/capture/win/video_capture_device_pxc_win.cc b/media/video/capture/win/video_capture_device_pxc_win.cc
index 65337c5..f25e0b0 100644
--- a/media/video/capture/win/video_capture_device_pxc_win.cc
+++ b/media/video/capture/win/video_capture_device_pxc_win.cc
@@ -507,9 +507,9 @@ void VideoCaptureDevicePxcWin::SetErrorState(const std::string& reason) {
 void VideoCaptureDevicePxcWin::CaptureColorImage(
     const PXCImage::ImageInfo& info, const PXCImage::ImageData& data) {
   int length = info.width * info.height * kBytesPerPixelRGB32;
-  client_->OnIncomingCapturedFrame(
+  client_->OnIncomingCapturedData(
       static_cast<uint8*> (data.planes[0]), length,
-      base::TimeTicks::Now(), 0, capture_format_);
+      capture_format_, 0, base::TimeTicks::Now());
 }
 
 void VideoCaptureDevicePxcWin::CaptureDepthImage(
@@ -527,8 +527,8 @@ void VideoCaptureDevicePxcWin::CaptureDepthImage(
     DepthToAdaptiveRGB32(depth_data, rgb_data, length);
   }
 
-  client_->OnIncomingCapturedFrame(
-      rgb_data, length, base::TimeTicks::Now(), 0, capture_format_);
+  client_->OnIncomingCapturedData(
+      rgb_data, length, capture_format_, 0, base::TimeTicks::Now());
 }
 
 void VideoCaptureDevicePxcWin::CaptureRgbdImage(
@@ -555,8 +555,8 @@ void VideoCaptureDevicePxcWin::CaptureRgbdImage(
     rgbd_data[rgbd_index + 1] = color_data[color_index + 1];
     rgbd_data[rgbd_index + 2] = color_data[color_index + 2];
   }
-  client_->OnIncomingCapturedFrame(
-    rgbd_data, length, base::TimeTicks::Now(), 0, capture_format_);
+  client_->OnIncomingCapturedData(
+    rgbd_data, length, capture_format_, 0, base::TimeTicks::Now());
 }
 
 void VideoCaptureDevicePxcWin::DepthToGrayscaleRGB32(
-- 
1.7.9.5

